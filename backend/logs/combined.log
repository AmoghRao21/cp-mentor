{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:22:11'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:22:11'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 86,
  codeName: 'IndexKeySpecsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }',
  stack: 'MongoServerError: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:22:11',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:22:24'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:22:24'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 86,
  codeName: 'IndexKeySpecsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }',
  stack: 'MongoServerError: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:22:24',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:24:11'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:24:11'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 86,
  codeName: 'IndexKeySpecsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }',
  stack: 'MongoServerError: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:24:11',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:29:13'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:29:13'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 86,
  codeName: 'IndexKeySpecsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { username: 1 }, name: "username_1", background: true }, existing index: { v: 2, unique: true, key: { username: 1 }, name: "username_1", background: true }',
  stack: 'MongoServerError: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { username: 1 }, name: "username_1", background: true }, existing index: { v: 2, unique: true, key: { username: 1 }, name: "username_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:29:13',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:31:28'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:31:28'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 86,
  codeName: 'IndexKeySpecsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { username: 1 }, name: "username_1", background: true }, existing index: { v: 2, unique: true, key: { username: 1 }, name: "username_1", background: true }',
  stack: 'MongoServerError: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { username: 1 }, name: "username_1", background: true }, existing index: { v: 2, unique: true, key: { username: 1 }, name: "username_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:31:28',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:32:04'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:32:04'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:32:04'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 85,
  codeName: 'IndexOptionsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }',
  stack: 'MongoServerError: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:32:04',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:33:00'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:33:00'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:33:00'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 85,
  codeName: 'IndexOptionsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }',
  stack: 'MongoServerError: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:33:00',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:36:02'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:36:02'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:36:02'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 85,
  codeName: 'IndexOptionsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }',
  stack: 'MongoServerError: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:36:02',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:38:37'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:38:37'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:38:37'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 85,
  codeName: 'IndexOptionsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }',
  stack: 'MongoServerError: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:38:37',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:42:48'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:42:48'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:42:48'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 85,
  codeName: 'IndexOptionsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }',
  stack: 'MongoServerError: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:42:48',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:44:10'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:44:10'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:44:10'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 85,
  codeName: 'IndexOptionsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }',
  stack: 'MongoServerError: An equivalent index already exists with the same name but different options. Requested index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", expireAfterSeconds: 7776000, background: true }, existing index: { v: 2, key: { timestamp: 1 }, name: "timestamp_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:44:10',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:45:31'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:45:31'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:45:31'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 67,
  codeName: 'CannotCreateIndex',
  level: 'error',
  message: '‚ùå Error creating indexes: Cannot create a TTL index on a capped collection',
  stack: 'MongoServerError: Cannot create a TTL index on a capped collection\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:45:31',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:46:56'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:46:56'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:46:56'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 67,
  codeName: 'CannotCreateIndex',
  level: 'error',
  message: '‚ùå Error creating indexes: Cannot create a TTL index on a capped collection',
  stack: 'MongoServerError: Cannot create a TTL index on a capped collection\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:46:56',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:49:38'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:49:38'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:49:38'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 67,
  codeName: 'CannotCreateIndex',
  level: 'error',
  message: '‚ùå Error creating indexes: Cannot create a TTL index on a capped collection',
  stack: 'MongoServerError: Cannot create a TTL index on a capped collection\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-04 21:49:38',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:50:33'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:50:33'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:50:33'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:50:33'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:50:33'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:50:33'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:50:33'
}
{
  message: '‚úÖ Admin user created: admin@cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:50:33'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:53:20'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:20'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:20'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:20'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:20'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:20'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:20'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:20'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 11261,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  service: 'cp-mentor-backend',
  level: 'error',
  message: 'AI Service health check failed: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent: [404 Not Found] models/gemini-pro is not found for API version v1, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.',
  stack: 'Error: [404 Not Found] models/gemini-pro is not found for API version v1, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.\n' +
    '    at makeRequest (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:216:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async generateContent (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:525:22)\n' +
    '    at async AIService.healthCheck (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:30:22)\n' +
    '    at async AIService.initialize (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:18:7)',
  timestamp: '2025-09-04 21:53:55'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:53:55'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 11347,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  service: 'cp-mentor-backend',
  level: 'error',
  message: 'AI Service health check failed: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"59s"}]',
  stack: 'Error: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"59s"}]\n' +
    '    at makeRequest (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:216:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async generateContent (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:525:22)\n' +
    '    at async AIService.healthCheck (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:30:22)\n' +
    '    at async AIService.initialize (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:18:7)',
  timestamp: '2025-09-04 21:58:00'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 21:58:00'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 11432,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:32'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 831,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:03:33'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:03:33'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/generate-hint \x1B[33m404\x1B[0m 1.937 ms - 249\x1B[0m',
  timestamp: '2025-09-04 22:03:58'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/generate-hint \x1B[33m404\x1B[0m 1.037 ms - 249\x1B[0m',
  timestamp: '2025-09-04 22:04:02'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/generate-hint \x1B[33m404\x1B[0m 1.060 ms - 249\x1B[0m',
  timestamp: '2025-09-04 22:04:02'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/analyze-code \x1B[33m404\x1B[0m 0.675 ms - 248\x1B[0m',
  timestamp: '2025-09-04 22:04:17'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 11639,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:06'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1755,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:12:07'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:07'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:21'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:21'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:21'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:12:51'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:51'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:51'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:51'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 11860,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 689,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:12:52'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:12:52'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/generate-hint \x1B[33m404\x1B[0m 2.927 ms - 707\x1B[0m',
  timestamp: '2025-09-04 22:13:13'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/generate-hint \x1B[33m404\x1B[0m 0.475 ms - 707\x1B[0m',
  timestamp: '2025-09-04 22:13:35'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:11'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:11'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:11'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 12317,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:51'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1857,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:17:53'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:17:53'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/generate-hint \x1B[33m404\x1B[0m 2.599 ms - 707\x1B[0m',
  timestamp: '2025-09-04 22:18:23'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:12'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:12'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 12678,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:45'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 719,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:19:46'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:19:46'
}
{
  service: 'cp-mentor-backend',
  requestId: '3294cebc-867c-4f00-9ba4-d6b1d1d4bb74',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    problemTitle: '3516. Find Closest Person',
    problemStatement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    difficulty: 'Easy',
    previousHints: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Extension version required\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/src/middleware/auth.js:185:17\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/src/middleware/errorHandler.js:133:5\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at trim_prefix (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:328:13)\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:286:9\n' +
    '    at router.process_params (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:346:12)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:280:10)\n' +
    '    at router.handle (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:175:3)\n' +
    '    at router (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)',
  error: 'Extension version required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 22:20:00'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 3.989 ms - 198\x1B[0m',
  timestamp: '2025-09-04 22:20:00'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:15'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:15'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:15'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 13019,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:51'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1785,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:21:53'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:21:53'
}
{
  service: 'cp-mentor-backend',
  requestId: 'e192803e-5a6a-491e-b6bb-e5b84e82afcf',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    problemTitle: '3516. Find Closest Person',
    problemStatement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    difficulty: 'Easy',
    previousHints: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Extension version required\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/src/middleware/auth.js:185:17\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/src/middleware/errorHandler.js:133:5\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at trim_prefix (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:328:13)\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:286:9\n' +
    '    at router.process_params (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:346:12)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:280:10)\n' +
    '    at router.handle (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:175:3)\n' +
    '    at router (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)',
  error: 'Extension version required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 22:22:08'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 5.836 ms - 198\x1B[0m',
  timestamp: '2025-09-04 22:22:08'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:22'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:22'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 13404,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:49'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 753,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:26:50'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:26:50'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-04 22:27:03'
}
{
  service: 'cp-mentor-backend',
  error: 'Session validation failed: userId: Path `userId` is required.',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  userId: undefined,
  level: 'error',
  message: 'Hint generation failed:',
  timestamp: '2025-09-04 22:27:03'
}
{
  service: 'cp-mentor-backend',
  requestId: '44e6e971-4a26-4434-81e7-1532396fbc56',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    problemTitle: '3516. Find Closest Person',
    problemStatement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    difficulty: 'Easy',
    previousHints: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 500,
  stack: 'ValidationError: Session validation failed: userId: Path `userId` is required.\n' +
    '    at Document.invalidate (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongoose/lib/document.js:3219:32)\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongoose/lib/document.js:3012:17\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongoose/lib/schematype.js:1368:9\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)',
  error: 'Session validation failed: userId: Path `userId` is required.',
  level: 'error',
  message: 'Server Error:',
  timestamp: '2025-09-04 22:27:03'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[31m500\x1B[0m 19.280 ms - 495\x1B[0m',
  timestamp: '2025-09-04 22:27:03'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 13545,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:56'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 740,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:28:57'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:28:57'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-04 22:29:10'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:29:10'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"49s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 543,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:29:10'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying hint in 2000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:29:10'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:29:12'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"46s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 350,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:29:13'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying hint in 4000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:29:13'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:29:17'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"42s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 410,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:29:17'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  hintNumber: 1,
  responseTime: 7321,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-04 22:29:17'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 7337.340 ms - 217\x1B[0m',
  timestamp: '2025-09-04 22:29:17'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-04 22:29:24'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:29:24'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"35s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 400,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:29:24'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying hint in 2000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:29:24'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:29:26'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"33s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 343,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:29:27'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying hint in 4000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:29:27'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:29:31'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"27s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 1520,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:29:32'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  hintNumber: 2,
  responseTime: 8286,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-04 22:29:32'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 8303.660 ms - 211\x1B[0m',
  timestamp: '2025-09-04 22:29:32'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:31:44'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:31:44'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:31:44'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 13970,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:05'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1803,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:32:07'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:32:07'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mGET /api/health \x1B[33m404\x1B[0m 6.532 ms - 699\x1B[0m',
  timestamp: '2025-09-04 22:32:53'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:06'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 14180,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:22'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 808,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:34:23'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:34:23'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mGET /health \x1B[32m200\x1B[0m 8.988 ms - 302\x1B[0m',
  timestamp: '2025-09-04 22:34:47'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:38:41'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:38:41'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:38:41'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 14534,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:13'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 733,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:40:14'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:14'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-04 22:40:33'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:40:33'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"26s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 475,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:40:33'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying hint in 2000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:33'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:40:35'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"24s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 476,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:40:36'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying hint in 4000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:36'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-04 22:40:40'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 558,
  level: 'error',
  message: 'hint generation failed:',
  timestamp: '2025-09-04 22:40:40'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  hintNumber: 1,
  responseTime: 7545,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-04 22:40:40'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 7565.061 ms - 217\x1B[0m',
  timestamp: '2025-09-04 22:40:40'
}
{
  service: 'cp-mentor-backend',
  operation: 'analyze_code',
  provider: 'gemini',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-04 22:40:55'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating analysis with Gemini:',
  timestamp: '2025-09-04 22:40:55'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"model":"gemini-1.5-pro","location":"global"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"4s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 512,
  level: 'error',
  message: 'analysis generation failed:',
  timestamp: '2025-09-04 22:40:55'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying analysis in 2000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:55'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating analysis with Gemini:',
  timestamp: '2025-09-04 22:40:57'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"2s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 455,
  level: 'error',
  message: 'analysis generation failed:',
  timestamp: '2025-09-04 22:40:58'
}
{
  message: '‚ö†Ô∏è Rate limit hit. Retrying analysis in 4000ms...',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:40:58'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  level: 'info',
  message: 'Generating analysis with Gemini:',
  timestamp: '2025-09-04 22:41:02'
}
{
  service: 'cp-mentor-backend',
  error: '[GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-1.5-pro:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerDayPerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}},{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count","quotaId":"GenerateContentInputTokensPerModelPerMinute-FreeTier","quotaDimensions":{"location":"global","model":"gemini-1.5-pro"}}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"57s"}]',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  responseTime: 498,
  level: 'error',
  message: 'analysis generation failed:',
  timestamp: '2025-09-04 22:41:02'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '3516. Find Closest Person',
  platform: 'leetcode',
  codeLength: 187,
  responseTime: 7482,
  userId: undefined,
  level: 'info',
  message: 'Code analysis completed:',
  timestamp: '2025-09-04 22:41:02'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/analyze-code \x1B[32m200\x1B[0m 7498.565 ms - 300\x1B[0m',
  timestamp: '2025-09-04 22:41:02'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:20'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:20'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:20'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 14908,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:34'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1752,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:47:36'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:47:36'
}
{
  service: 'cp-mentor-backend',
  requestId: '0d905596-dfc4-40db-bf52-b397084a7de6',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '3516. Find Closest Person',
    statement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    difficulty: 'Easy',
    history: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required, Invalid platform\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required, Invalid platform',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 22:47:54'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 6.961 ms - 270\x1B[0m',
  timestamp: '2025-09-04 22:47:54'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:34'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 15208,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 668,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:51:50'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:00'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:00'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 15448,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 724,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 22:56:17'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 22:56:17'
}
{
  service: 'cp-mentor-backend',
  requestId: '8bfb6aca-c0b8-470c-9131-5009e927499d',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '3516. Find Closest Person',
    statement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    difficulty: 'Easy',
    history: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 22:56:36'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 7.571 ms - 234\x1B[0m',
  timestamp: '2025-09-04 22:56:36'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:00:45'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:00:45'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:00:45'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 15722,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:02'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 2129,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:01:04'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:01:04'
}
{
  service: 'cp-mentor-backend',
  requestId: '0ea50152-2794-4c20-9471-d4bc7cc363e7',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '3516. Find Closest Person',
    statement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      '\n' +
      '\tx is the position of Person 1.\n' +
      '\ty is the position of Person 2.\n' +
      '\tz is the position of Person 3, who does not move.\n' +
      '\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      '\n' +
      '\tReturn 1 if Person 1 arrives first.\n' +
      '\tReturn 2 if Person 2 arrives first.\n' +
      '\tReturn 0 if both arrive at the same time.\n' +
      '\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      'Example 1:\n' +
      '\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      '\n' +
      '\tPerson 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      '\tPerson 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      '\n' +
      '\tPerson 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      '\tPerson 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is 2.\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      '\n' +
      'Input: x = 1, y = 5, z = 3\n' +
      '\n' +
      'Output: 0\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      '\n' +
      '\tPerson 1 is at position 1 and can reach Person 3 (at position 3) in 2 steps.\n' +
      '\tPerson 2 is at position 5 and can reach Person 3 in 2 steps.\n' +
      '\n' +
      '\n' +
      'Since both Person 1 and Person 2 reach Person 3 at the same time, the output is 0.\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      'Constraints:\n' +
      '\n' +
      '\n' +
      '\t1 <= x, y, z <= 100',
    difficulty: 'Easy',
    history: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:01:23'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 5.515 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:01:23'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:03:38'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:03:38'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:03:38'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 16377,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 628,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:04:45'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:04:45'
}
{
  service: 'cp-mentor-backend',
  requestId: '1ea326cc-a175-41b8-8e89-008e85e0d1e8',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '3516. Find Closest Person',
    statement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      '\n' +
      '\tx is the position of Person 1.\n' +
      '\ty is the position of Person 2.\n' +
      '\tz is the position of Person 3, who does not move.\n' +
      '\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      '\n' +
      '\tReturn 1 if Person 1 arrives first.\n' +
      '\tReturn 2 if Person 2 arrives first.\n' +
      '\tReturn 0 if both arrive at the same time.\n' +
      '\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      'Example 1:\n' +
      '\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      '\n' +
      '\tPerson 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      '\tPerson 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      '\n' +
      '\tPerson 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      '\tPerson 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is 2.\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      '\n' +
      'Input: x = 1, y = 5, z = 3\n' +
      '\n' +
      'Output: 0\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      '\n' +
      '\tPerson 1 is at position 1 and can reach Person 3 (at position 3) in 2 steps.\n' +
      '\tPerson 2 is at position 5 and can reach Person 3 in 2 steps.\n' +
      '\n' +
      '\n' +
      'Since both Person 1 and Person 2 reach Person 3 at the same time, the output is 0.\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      'Constraints:\n' +
      '\n' +
      '\n' +
      '\t1 <= x, y, z <= 100',
    difficulty: 'Easy',
    history: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:05:01'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 11.087 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:05:01'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:27'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:27'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:27'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 16777,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 772,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:11:50'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:11:50'
}
{
  service: 'cp-mentor-backend',
  requestId: 'eb905c3f-2e0a-4dbe-903f-8ce9f8a5a9b7',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '3516. Find Closest Person',
    statement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    difficulty: 'Easy',
    history: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:12:19'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 8.215 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:12:19'
}
{
  service: 'cp-mentor-backend',
  requestId: '3aa5e310-1859-4866-b7f8-ee33834c1876',
  method: 'POST',
  url: '/api/ai/analyze-code',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '3516. Find Closest Person',
    statement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:12:27'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/analyze-code \x1B[33m400\x1B[0m 2.149 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:12:27'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:00'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:00'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:00'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 17042,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:17'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 902,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:15:18'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:15:18'
}
{
  service: 'cp-mentor-backend',
  requestId: 'eb79bcb7-52a7-4a7d-8a14-e845cebdd2c9',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '3516. Find Closest Person',
    statement: 'You are given three integers x, y, and z, representing the positions of three people on a number line:\n' +
      '\n' +
      'x is the position of Person 1.\n' +
      'y is the position of Person 2.\n' +
      'z is the position of Person 3, who does not move.\n' +
      '\n' +
      'Both Person 1 and Person 2 move toward Person 3 at the same speed.\n' +
      '\n' +
      'Determine which person reaches Person 3 first:\n' +
      '\n' +
      'Return 1 if Person 1 arrives first.\n' +
      'Return 2 if Person 2 arrives first.\n' +
      'Return 0 if both arrive at the same time.\n' +
      '\n' +
      'Return the result accordingly.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: x = 2, y = 7, z = 4\n' +
      '\n' +
      'Output: 1\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 4) in 2 steps.\n' +
      'Person 2 is at position 7 and can reach Person 3 in 3 steps.\n' +
      '\n' +
      'Since Person 1 reaches Person 3 first, the output is 1.\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: x = 2, y = 5, z = 6\n' +
      '\n' +
      'Output: 2\n' +
      '\n' +
      'Explanation:\n' +
      '\n' +
      'Person 1 is at position 2 and can reach Person 3 (at position 6) in 4 steps.\n' +
      'Person 2 is at position 5 and can reach Person 3 in 1 step.\n' +
      '\n' +
      'Since Person 2 reaches Person 3 first, the output is ',
    difficulty: 'Easy',
    history: [],
    userCode: 'class Solution {\n' +
      'public:\n' +
      '    int findClosest(int x, int y, int z) {\n' +
      '        int dist1 = abs(z-y);\n' +
      '        int dist2 = abs(z-x);\n' +
      '\n' +
      '        if(dist1 < dist2){\n' +
      '            return 2;\n' +
      '        }\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:16:04'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 9.768 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:16:04'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:17:24'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:17:24'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:17:24'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 17317,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:04'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1998,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:19:05'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:19:05'
}
{
  service: 'cp-mentor-backend',
  requestId: 'a709374f-6fae-43e2-92a2-a1a981b2164f',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n' +
      ' * };\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:19:40'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 5.534 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:19:40'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:11'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:11'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 17757,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:34'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1869,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:22:36'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:22:36'
}
{
  service: 'cp-mentor-backend',
  requestId: 'b1ee9663-a20a-427e-b448-03ae1d7d5cf3',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:22:53'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 8.184 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:22:53'
}
{
  service: 'cp-mentor-backend',
  requestId: '263a9f71-413e-4158-9b90-8dcb7dd0e92b',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:23:02'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 2.655 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:23:02'
}
{
  service: 'cp-mentor-backend',
  requestId: '7e022d93-af4a-44f2-a3b3-215fe7ec0950',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:23:03'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 2.937 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:23:03'
}
{
  service: 'cp-mentor-backend',
  requestId: 'd2d007d7-90a0-4b77-a2ec-2929c6dd6936',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:23:04'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 2.575 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:23:04'
}
{
  service: 'cp-mentor-backend',
  requestId: '4337eaff-fcd8-4c36-97fc-260c33b6b1e8',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:23:05'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 2.819 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:23:05'
}
{
  service: 'cp-mentor-backend',
  requestId: 'dfb4f674-cceb-4515-bc83-4062d1ec8d88',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:23:06'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 3.688 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:23:06'
}
{
  service: 'cp-mentor-backend',
  requestId: '107f16b0-0994-4115-b503-7ebaf00ebc9e',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:23:06'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 1.460 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:23:06'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:42'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:42'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:42'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 18060,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:27:58'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1798,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:28:00'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:28:00'
}
{
  service: 'cp-mentor-backend',
  requestId: 'dd979251-ee9c-4922-b9e2-59caf1ef0dd7',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: '2. Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:28:28'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 7.798 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:28:28'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:02'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:02'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:02'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 18352,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:17'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1677,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:32:19'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:32:19'
}
{
  service: 'cp-mentor-backend',
  requestId: 'fe84fed0-64a2-41fe-8041-1e64a7975cd2',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:32:36'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 6.304 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:32:36'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:34:53'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:34:53'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:34:53'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 18615,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:09'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1867,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:35:11'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:35:11'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:10'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:10'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 18798,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:26'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 802,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:39:27'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:39:27'
}
{
  service: 'cp-mentor-backend',
  requestId: 'a46d8206-ed88-457c-9717-fc6b8a720aa5',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:39:53'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 7.028 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:39:53'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:41:29'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:41:29'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:41:29'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 19115,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:39'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1889,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:42:41'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:42:41'
}
{
  service: 'cp-mentor-backend',
  requestId: '95a03f03-d790-40fa-9549-36b504c48253',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:43:08'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 17.557 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:43:08'
}
{
  service: 'cp-mentor-backend',
  requestId: '5a969f0f-6610-4466-a14b-2b539d060c4e',
  method: 'POST',
  url: '/api/ai/analyze-code',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) :',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:43:14'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/analyze-code \x1B[33m400\x1B[0m 4.192 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:43:14'
}
{
  service: 'cp-mentor-backend',
  requestId: 'f64f7bbe-e396-4a1f-9cab-105a2d8fc3c1',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:43:17'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 2.960 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:43:17'
}
{
  service: 'cp-mentor-backend',
  requestId: '4531350c-9987-4456-9601-7ce2c0e2faf4',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:43:18'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 2.899 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:43:18'
}
{
  service: 'cp-mentor-backend',
  requestId: 'a946c484-d013-4a42-8202-365e7cff7f0e',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:43:19'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 1.330 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:43:19'
}
{
  service: 'cp-mentor-backend',
  requestId: '96f68603-eb41-4944-8287-a938b90ec593',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:43:19'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 3.628 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:43:19'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:13'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:13'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:13'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 19404,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:30'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1823,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:45:31'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:45:31'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mGET /health \x1B[32m200\x1B[0m 5.487 ms - 302\x1B[0m',
  timestamp: '2025-09-04 23:46:07'
}
{
  message: 'üõë SIGINT received, shutting down gracefully...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:25'
}
{
  message: 'üì° HTTP server closed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:25'
}
{
  message: '‚ö†Ô∏è  MongoDB disconnected',
  level: 'warn',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:25'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 19667,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:37'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 2164,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:49:39'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:49:39'
}
{
  service: 'cp-mentor-backend',
  requestId: '910a5aa1-d221-482b-bb33-72985ba012e2',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : ',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:49:58'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 6.333 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:49:58'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: '‚úÖ Indexes created for User',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: '‚úÖ Indexes created for Analytics',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: '‚úÖ Indexes created for Session',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üéØ All database indexes created successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 5516,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:13'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 8364,
  provider: 'gemini-flash',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-04 23:58:21'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-04 23:58:21'
}
{
  service: 'cp-mentor-backend',
  requestId: 'e3717e4a-1b65-4615-b6d1-51ac83d40ecb',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36',
  userId: undefined,
  body: {
    title: 'Add Two Numbers',
    statement: 'You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum¬†as a linked list.\n' +
      '\n' +
      'You may assume the two numbers do not contain any leading zero, except the number 0 itself.\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Example 1:\n' +
      '\n' +
      'Input: l1 = [2,4,3], l2 = [5,6,4]\n' +
      'Output: [7,0,8]\n' +
      'Explanation: 342 + 465 = 807.\n' +
      '\n' +
      '\n' +
      'Example 2:\n' +
      '\n' +
      'Input: l1 = [0], l2 = [0]\n' +
      'Output: [0]\n' +
      '\n' +
      '\n' +
      'Example 3:\n' +
      '\n' +
      'Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n' +
      'Output: [8,9,9,9,0,0,0,1]\n' +
      '\n' +
      '\n' +
      '¬†\n' +
      '\n' +
      'Constraints:\n' +
      '\n' +
      'The number of nodes in each linked list is in the range [1, 100].\n' +
      '0 <= Node.val <= 9\n' +
      'It is guaranteed that the list represents a number that does not have leading zeros.',
    difficulty: 'Medium',
    history: [],
    userCode: '/**\n' +
      ' * Definition for singly-linked list.\n' +
      ' * struct ListNode {\n' +
      ' *     int val;\n' +
      ' *     ListNode *next;\n' +
      ' *     ListNode() : val(0), next(nullptr) {}\n' +
      ' *     ListNode(int x) : val(x), next(nullptr) {}\n' +
      ' *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n' +
      ' * };\n',
    platform: 'leetcode'
  },
  statusCode: 400,
  stack: 'Error: Validation failed: Problem title is required\n' +
    '    at validateRequest (/home/amogh/Desktop/cp-mentor-extension/backend/src/routes/ai.js:40:17)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/route.js:149:13)\n' +
    '    at middleware (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express-validator/lib/middlewares/check.js:16:13)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)',
  error: 'Validation failed: Problem title is required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-04 23:58:22'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[33m400\x1B[0m 4.777 ms - 234\x1B[0m',
  timestamp: '2025-09-04 23:58:22'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-05 03:42:17'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:42:17'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 86,
  codeName: 'IndexKeySpecsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }',
  stack: 'MongoServerError: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-05 03:42:17',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-05 03:42:25'
}
{
  message: 'üîß Setting up database indexes...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:42:25'
}
{
  service: 'cp-mentor-backend',
  ok: 0,
  code: 86,
  codeName: 'IndexKeySpecsConflict',
  level: 'error',
  message: '‚ùå Error creating indexes: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }',
  stack: 'MongoServerError: An existing index has the same name as the requested index. When index names are not specified, they are auto generated and can cause conflicts. Please refer to our documentation. Requested index: { v: 2, key: { email: 1 }, name: "email_1", background: true }, existing index: { v: 2, unique: true, key: { email: 1 }, name: "email_1", background: true }\n' +
    '    at Connection.onMessage (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:202:26)\n' +
    '    at MessageStream.<anonymous> (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/connection.js:61:60)\n' +
    '    at MessageStream.emit (node:events:508:28)\n' +
    '    at processIncomingData (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n' +
    '    at MessageStream._write (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:570:12)\n' +
    '    at _write (node:internal/streams/writable:499:10)\n' +
    '    at Writable.write (node:internal/streams/writable:508:10)\n' +
    '    at Socket.ondata (node:internal/streams/readable:1008:24)\n' +
    '    at Socket.emit (node:events:508:28)',
  timestamp: '2025-09-05 03:42:25',
  Symbol(errorLabels): Set(0) {}
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-05 03:43:36'
}
{
  message: '‚è≠Ô∏è  Skipping index setup in development mode',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:43:36'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:43:36'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:43:36'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: '‚è≠Ô∏è  Skipping index setup in development mode',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 5812,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  service: 'cp-mentor-backend',
  level: 'error',
  message: 'AI Service health check failed: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent: [404 Not Found] models/gemini-pro is not found for API version v1, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.',
  stack: 'Error: [404 Not Found] models/gemini-pro is not found for API version v1, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.\n' +
    '    at makeRequest (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:216:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async generateContent (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:525:22)\n' +
    '    at async AIService.healthCheck (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:30:22)\n' +
    '    at async AIService.initialize (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:18:7)',
  timestamp: '2025-09-05 03:44:02'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:44:02'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: '‚è≠Ô∏è  Skipping index setup in development mode',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 5939,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:43'
}
{
  service: 'cp-mentor-backend',
  level: 'error',
  message: 'AI Service health check failed: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent: [404 Not Found] models/gemini-pro is not found for API version v1, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.',
  stack: 'Error: [404 Not Found] models/gemini-pro is not found for API version v1, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.\n' +
    '    at makeRequest (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:216:19)\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n' +
    '    at async generateContent (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/@google/generative-ai/dist/index.js:525:22)\n' +
    '    at async AIService.healthCheck (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:30:22)\n' +
    '    at async AIService.initialize (/home/amogh/Desktop/cp-mentor-extension/backend/src/services/aiService.js:18:7)',
  timestamp: '2025-09-05 03:45:44'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:45:44'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: '‚è≠Ô∏è  Skipping index setup in development mode',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 6075,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:54'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1118,
  provider: 'gemini-pro',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-05 03:46:55'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:46:55'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mGET /health \x1B[32m200\x1B[0m 6.106 ms - 302\x1B[0m',
  timestamp: '2025-09-05 03:47:36'
}
{
  service: 'cp-mentor-backend',
  requestId: 'c79aac2b-7dd5-4e29-952d-3ccf603fd900',
  method: 'GET',
  url: '/api/ai/health',
  ip: '::ffff:127.0.0.1',
  userAgent: 'curl/7.81.0',
  userId: undefined,
  body: undefined,
  statusCode: 400,
  stack: 'Error: Extension version required\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/src/middleware/auth.js:185:17\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/src/middleware/errorHandler.js:133:5\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)\n' +
    '    at trim_prefix (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:328:13)\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:286:9\n' +
    '    at router.process_params (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:346:12)\n' +
    '    at next (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:280:10)\n' +
    '    at router.handle (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:175:3)\n' +
    '    at router (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/express/lib/router/layer.js:95:5)',
  error: 'Extension version required',
  level: 'warn',
  message: 'Client Error:',
  timestamp: '2025-09-05 03:47:50'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mGET /api/ai/health \x1B[33m400\x1B[0m 3.740 ms - 198\x1B[0m',
  timestamp: '2025-09-05 03:47:50'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1892,
  provider: 'gemini-pro',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-05 03:48:33'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mGET /api/ai/health \x1B[32m200\x1B[0m 1894.895 ms - 264\x1B[0m',
  timestamp: '2025-09-05 03:48:33'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: 'Two Sum',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 03:48:52'
}
{
  service: 'cp-mentor-backend',
  error: 'Session validation failed: userId: Path `userId` is required.',
  problemTitle: 'Two Sum',
  platform: 'leetcode',
  userId: undefined,
  level: 'error',
  message: 'Hint generation failed:',
  timestamp: '2025-09-05 03:48:52'
}
{
  service: 'cp-mentor-backend',
  requestId: '05f77576-f274-4476-89a7-4d6e1dc90879',
  method: 'POST',
  url: '/api/ai/generate-hint',
  ip: '::ffff:127.0.0.1',
  userAgent: 'curl/7.81.0',
  userId: undefined,
  body: {
    problemTitle: 'Two Sum',
    problemStatement: 'Given an array of integers, return indices of two numbers such that they add up to a specific target.',
    platform: 'leetcode',
    difficulty: 'Easy',
    previousHints: [],
    userCode: ''
  },
  statusCode: 500,
  stack: 'ValidationError: Session validation failed: userId: Path `userId` is required.\n' +
    '    at Document.invalidate (/home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongoose/lib/document.js:3219:32)\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongoose/lib/document.js:3012:17\n' +
    '    at /home/amogh/Desktop/cp-mentor-extension/backend/node_modules/mongoose/lib/schematype.js:1368:9\n' +
    '    at process.processTicksAndRejections (node:internal/process/task_queues:85:11)',
  error: 'Session validation failed: userId: Path `userId` is required.',
  level: 'error',
  message: 'Server Error:',
  timestamp: '2025-09-05 03:48:52'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[31m500\x1B[0m 21.425 ms - 495\x1B[0m',
  timestamp: '2025-09-05 03:48:52'
}
{
  service: 'cp-mentor-backend',
  host: 'localhost',
  port: 27017,
  database: 'cp-mentor',
  level: 'info',
  message: '‚úÖ MongoDB connected successfully',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: '‚è≠Ô∏è  Skipping index setup in development mode',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: 'üå± Seeding initial data...',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: 'üéØ Data seeding completed',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: '‚öôÔ∏è  Middleware configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: 'üõ£Ô∏è  Routes configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: 'üõ°Ô∏è  Error handling configured successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: 'üöÄ Application initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  service: 'cp-mentor-backend',
  environment: 'development',
  port: '3000',
  pid: 6672,
  nodeVersion: 'v24.6.0',
  platform: 'linux',
  level: 'info',
  message: 'üéØ CP Mentor Backend Server running on port 3000',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: 'üì° Available endpoints:',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: '   Health: http://localhost:3000/health',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: '   API: http://localhost:3000/api',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  message: '   Docs: https://docs.cpmentor.dev',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:37'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 1026,
  provider: 'gemini-pro',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-05 03:49:38'
}
{
  message: 'ü§ñ AI Service initialized successfully',
  level: 'info',
  service: 'cp-mentor-backend',
  timestamp: '2025-09-05 03:49:38'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: 'Two Sum',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 03:49:48'
}
{
  service: 'cp-mentor-backend',
  problemTitle: 'Two Sum',
  platform: 'leetcode',
  difficulty: 'Easy',
  hintsGiven: 0,
  codePresent: false,
  userLevel: 'intermediate',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-05 03:49:48'
}
{
  service: 'cp-mentor-backend',
  problemTitle: 'Two Sum',
  platform: 'leetcode',
  responseTime: 3731,
  hintLength: 293,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:49:52'
}
{
  service: 'cp-mentor-backend',
  problemTitle: 'Two Sum',
  platform: 'leetcode',
  hintNumber: 1,
  responseTime: 3751,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:49:52'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 3772.640 ms - 398\x1B[0m',
  timestamp: '2025-09-05 03:49:52'
}
{
  service: 'cp-mentor-backend',
  healthy: true,
  responseTime: 975,
  provider: 'gemini-pro',
  level: 'info',
  message: 'AI Service health check:',
  timestamp: '2025-09-05 03:54:04'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mGET /api/ai/health \x1B[32m200\x1B[0m 977.577 ms - 263\x1B[0m',
  timestamp: '2025-09-05 03:54:04'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 03:57:05'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  difficulty: 'Easy',
  hintsGiven: 0,
  codePresent: true,
  userLevel: 'intermediate',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-05 03:57:05'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  responseTime: 6128,
  hintLength: 433,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:57:11'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  hintNumber: 1,
  responseTime: 6142,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:57:11'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 6154.342 ms - 555\x1B[0m',
  timestamp: '2025-09-05 03:57:11'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 03:57:18'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  difficulty: 'Easy',
  hintsGiven: 1,
  codePresent: true,
  userLevel: 'intermediate',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-05 03:57:18'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  responseTime: 5189,
  hintLength: 405,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:57:23'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  hintNumber: 2,
  responseTime: 5200,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:57:23'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 5208.993 ms - 527\x1B[0m',
  timestamp: '2025-09-05 03:57:23'
}
{
  service: 'cp-mentor-backend',
  operation: 'analyze_code',
  provider: 'gemini',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 03:57:30'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  codeLength: 212,
  codeLanguage: 'python',
  userLevel: 'intermediate',
  level: 'info',
  message: 'Analyzing code with Gemini:',
  timestamp: '2025-09-05 03:57:30'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  responseTime: 8034,
  analysisLength: 1076,
  level: 'info',
  message: 'Code analysis completed:',
  timestamp: '2025-09-05 03:57:38'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  codeLength: 212,
  responseTime: 8049,
  userId: undefined,
  level: 'info',
  message: 'Code analysis completed:',
  timestamp: '2025-09-05 03:57:38'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/analyze-code \x1B[32m200\x1B[0m 8063.441 ms - -\x1B[0m',
  timestamp: '2025-09-05 03:57:38'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 03:58:23'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  difficulty: 'Easy',
  hintsGiven: 2,
  codePresent: true,
  userLevel: 'intermediate',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-05 03:58:23'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  responseTime: 5218,
  hintLength: 445,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:58:28'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '1. Two Sum',
  platform: 'leetcode',
  hintNumber: 3,
  responseTime: 5222,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 03:58:28'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 5232.702 ms - 567\x1B[0m',
  timestamp: '2025-09-05 03:58:28'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 04:00:43'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  difficulty: 'Hard',
  hintsGiven: 0,
  codePresent: true,
  userLevel: 'intermediate',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-05 04:00:43'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  responseTime: 57945,
  hintLength: 404,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 04:01:41'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  hintNumber: 1,
  responseTime: 57949,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 04:01:41'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 57960.228 ms - 529\x1B[0m',
  timestamp: '2025-09-05 04:01:41'
}
{
  service: 'cp-mentor-backend',
  operation: 'generate_hint',
  provider: 'gemini',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  codeLength: 0,
  hintsCount: 0,
  level: 'info',
  message: 'AI Request',
  timestamp: '2025-09-05 04:01:44'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  difficulty: 'Hard',
  hintsGiven: 0,
  codePresent: true,
  userLevel: 'intermediate',
  level: 'info',
  message: 'Generating hint with Gemini:',
  timestamp: '2025-09-05 04:01:44'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  responseTime: 4503,
  hintLength: 354,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 04:01:49'
}
{
  service: 'cp-mentor-backend',
  problemTitle: '4. Median of Two Sorted Arrays',
  platform: 'leetcode',
  hintNumber: 1,
  responseTime: 4514,
  userId: undefined,
  level: 'info',
  message: 'Hint generated successfully:',
  timestamp: '2025-09-05 04:01:49'
}
{
  service: 'cp-mentor-backend',
  type: 'HTTP',
  level: 'info',
  message: '\x1B[0mPOST /api/ai/generate-hint \x1B[32m200\x1B[0m 4523.084 ms - 476\x1B[0m',
  timestamp: '2025-09-05 04:01:49'
}
